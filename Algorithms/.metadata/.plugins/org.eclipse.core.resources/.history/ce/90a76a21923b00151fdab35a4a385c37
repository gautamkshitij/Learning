package Implementation.LinkedList.unordered;

public class SequentialSearchST<Key, Value> {

	Node first;

	private class Node {
		Key key;
		Value value;
		Node next;

		public Node(Key key, Value value, Node next) {
			this.key = key;
			this.setValue(value);
			this.next = next;

		}

		public Value getValue() {
			return value;
		}

		public void setValue(Value value) {
			this.value = value;
		}
	}

	public void put(Key key, Value value) {
		for (Node x = first; x != null; x = x.next) {
			if (key.equals(x.key)) {
				x.setValue(value);
			}
		}
		/*
		 * Going through all elements thus taking time N to insert an element.
		 */
		first = new Node(key, value, first);
		/*
		 * Here first node is being pushed back so that new node is inserted in
		 * the front. Every time new node is inserted, it becomes the first
		 * node.
		 */

	}

}
